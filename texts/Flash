lurkmo.re • lurkmore.co • lurkmore.net • IPv6.lurkmo.re • IPv6.lurkmore.to • friGate • Средства против цензуры • Пожертвования

Flash must die!
Flash — векторная технология для наделения интернетов мультимедийностью.

Основное применение — воспроизведение анимации, музыки и видео на веб-страницах. Именно это применение обеспечило тотальную популярность флэша, так как ничего прогрессивнее MIDI и GIF и чтобы нормально работало, на тот момент не было. Ситуация в корне изменилась лишь последние годы с появлением в браузерах адекватной поддержки HTML5 и отказа от поддержки Flash производителями смартфонов и большинством крупных сервисов типа ЮТуба по-умолчанию.

Благодаря низкому порогу вхождения Flash очень способствует самовыражению школьников. Также часто поражает мозг взрослых особей, как правило, офисного планктона.

Изначально Flash создавался как программа для векторной анимации и в интернетах использовался преимущественно как анимированные баннеры и анимированные кнопочки. Но потом случилось непоправимое — во Flash добавили язык программирования ActionScript, который позволял писать вполне себе полноценные приложения. Так что в нулевые на Flash стали делать вообще всё — начиная с браузерных рабочих столов и кончая натуральными 3D-играми с реалистичной физикой и аппаратным ускорением. Более того, некоторые особо злые транснациональные корпорации писали на нём свои внутрение клиенты к документообороту и ERP-системам, заставляя срать кирпичами всех, хоть чуть-чуть знакомых с компьютерной безопасностью, кроссплатформенностью и корпоративным софтом. Кроме того, именно благодаря внедренной с восьмой версии поддержки видеопроигрывания (flv), появились проекты типа ТыТрубы.

Когда школьникам надоело рисовать вращающуюся машинку, Macromedia, разрабатывавшая Flash и другие полезные программы, придумала ActionScript (под нумером 1.1). Этот язык мог сделать, чтобы машинка вращалась по наступлению неких событий. Либо не вращалась.

Потом вышел ActionScript 2.0. В нём появилось программное рисование: drawLine() и ООП, т.е. он приблизился к состоянию полноценного языка, как это было в свое время с PHP.
Потом компания Macromedia продалась Adobe, и тут же был выпущен язык «ActionScript3.0».

Даже с нулевыми знаниями программирования, но с некоторой пытливостью, можно было самостоятельно научить свой мультик некоторым минимально необходимым действиям:

Более продвинутые юзеры пишут на флеше игры, 3D движки, программы, и прочие вещи. Сайт, чтобы смотреть, чего они там вытворяют: Flasher.ru.

В середине 2010-го года Адоб, до той поры по большему счету клавший болт на Flash-игры (несмотря на их бесконечное количество) внезапно опомнился и накатал примочку к флэшу под названием Molehill, которая поддерживает трехмерные графические ускорители, рули, геймпады и прочую игроманию, что позволяет делать на флэше это или вот это. С учетом того, что всё это вполне себе работает под тремя основными ОС, Флэш ВНЕЗАПНО становится нехилой такой игровой веб-платформой. В то же время их основной конкурент в этом деле движок Unity 3D не менее ВНЕЗАПНО поднял лапки и заявил о портировании себя под флэш. Поскольку бету «кротоноры» уже выложили в интернеты, на нее успели портировать третью кваку. Just for lulz.

Позже Molehill переименовали в унылое название Stage3D и официально выпустили внутри Flash 11. Все танцуют, а Angry Birds наконец-то выпустили под Flash внутри Facebook-а.

Для возможности открытия флеш-роликов на мобильных телефонах существовала реализация Flash-плеера под названием Flash Lite. В настоящее время безнадежно устарела: последняя существующая версия - Flash Lite 4, что соответствует 9 версии для десктопа.

Под Android дела обстояли несколько лучше: Flash официально поддерживался до Android 4.0.4 включительно, позднее Google официально отказалась от его поддержки, но открыть сайт, созданный с использованием этой технологии, можно и сейчас; нужен только Flash-плагин (остановился в развитии на версии 11.1.115.81) и один из немногих браузеров, еще не потерявших возможность показывать флеш на страницах (например, Dolphin). Но все равно воспроизводимая флешка будет выдавать средние 10 FPS даже на топовом 8-ядерном процессоре, что, согласитесь, откровенно мало для комфортного просмотра.

Аналогичная ситуация и у яблок.

Все же, как показывает практика, халява — самое вредное зло, особенно в Раисси. Тем-более, когда дело доходит до всех хомячков в целом. Adobe, понимает это, заявив, о частичной поддержке своего плагина, начиная с версии 11.2. Чем и вызвало лютейший вайп заднего отверстия у 9998 линупсеров, фапающих на видео в youtube и etc… Однако в RPM/DEB-пакете с Google Chrome есть последняя версия этого плагина (не совместимая с Firefox).

В конце 2016 года поддержка Linux была возвращена: на официальном сайте появились варианты загрузки для Google Chrome и Firefox. Раньше был вариант только для Firefox (версия 11.2 Long-Time Support, а теперь − последняя версия). Однако в этой версии не работает VDPAU: аппаратное ускорение FullHD-видео. В коде это есть, но не работает. Примечательно что проблемы при использовании Flash + VDPAU были и с версией 11.2, а затем, по истечению срока поддержки этой LTS-версии, проблемы чудесным образом пропали. Неужели в код встроена проверка даты?

VDPAU появился в 2008-м, это PureVideo HD для Linux и UNIX-подобных систем. Это фирменная технология NVIDIA, и что интересно, опенсорс. Для Ubuntu 8.10 был доступен неофициальный PPA-репозиторий с libvdpau и mplayer, собранным с ним. В 9.04 вошло "из коробки". В 2009, поддержка VDPAU появилась во Флеше. Стало наконец-то возможно смотреть не только анимешки и спираченные фильмы, но и фильмы-онлайн, стремительно набиравшие тогда популярность. Многие тогда возмутились: а как же VA-API (это такой VDPAU для ATi/AMD и Intel)? Adobe уже отвечала на подобный вопрос по звуку в Linux. Алсо, для почти никому не нужного API "CrystalHD" поддержка во Флеше также есть, что ясно даёт понять, что NVIDIA и CrystalHD прямо обращались к Adobe (и заплатили деньги), а остальные − нет.

Для Intel и ATi/AMD в 2013 году появился враппер, транслирующий вызовы VDPAU to VA-API. Враппер написал российский ЛОРовец I-Rinat (за что ему огромное спасибо) и он (враппер, а не ЛОРовец) есть в официальных репозиториях Debian/Ubuntu под названием libvdpau-va-gl1

Использование связки Flash + VDPAU − единственный способ смотреть FullHD на нетбуке, не сохраняя его предварительно на винч. Потому что Google прямо сказал, что не будет это реализовывать (однако на начало 2018 года в Chromium начали появляться зайчатки реализации), а Mozilla мутит воду: сначала Firefox поддерживает Gstreamer 0.10, но только не VDPAU. Потом добавлена поддержка Gstreamer 1.0 (VDPAU работает) - а потом поддержку Gstreamer ВНЕЗАПНО удаляют. В актуальном сейчас Firefox 52 вроде как воспроизводится через ffmpeg.

Если у вас − маломощный ПК, который не тянет FullHD на CPU (Flash 11.2 требует sse2 в проце, так что на P3 и Athlon XP используйте 11.1; впрочем, откуда на таких компах - видяшка с VDPAU?), то юзать VDPAU можно и сейчас. Необходимо установить Flash 11.2 из официального архива, затем включить VDPAU по этой мануалке. Придётся мириться с постоянными запросами "вы действительно хотите воспроизвести видео через устаревший и небезопасный плагин?". Для YouTube нужно установить любой из множества браузерных плагинов для переключения между Flash и HTML5 Video.

Flash и Linux связывают и другие скандалы. Например, когда в 2011 ВНЕЗАПНО решили выкинуть HAL из дистров, во Флеше отвалилось воспроизведение DRM-контента. К счастью, линковки с libhal.so не было, а был вызов с помощью dlopen(), поэтому Flash не "отвалился". Предчувствовали они там что ли, что HAL выкинут? Так как в тот момент поддержка Flash была прекращена (выпускались только обновления безопасности), сообщество Fedora подготовило враппер поверх libudev. После возобновления поддержки, Adobe не стала писать код для libudev, а удалила поддержку DRM-контента из Linux-версии.

В 2010 году в некоторых случаях стали наблюдаться проблемы со звуком во флеше. Причиной тому стало то, что высококвалифицированные сертифицированные программисты Adobe не читают документацию по стандартной библиотеке языка C и используют для пересекающихся сегментов памяти функцию memcpy() вместо функции memmove(), хотя в документации ясно по-русскианглийски написано, что так делать нельзя. Сертифицированный™ программист Adobe же ответил «УМВР».

Во флеш постоянно обнаруживались уязвимости. И начиная с продажи Adobe постоянно закрываются. Правда, каждое обновление, которое выходило чуть ли не каждую неделю, только добавляло тормозов и крэшило браузеры.
Число дыр просто немеряно, аналогично как и количество дыр в винде пруф. Флеш обожают вирусописатели, так как через огромное число уязвимостей можно невозбранно сгружать ламерам трояны, и причем похоже, что на безопасность и аудит кода самой Adobe наплевать с высокой горы, как и в аналогичной дырявой поделке Adobe Reader для PDF. Дыр так много, что в мозилле решили, что пока не исправят уязвимости, вместо флэш-фреймов сначала будет заглушка, где нужно кликнуть одну кнопку, потом ещё одну (из двух, держать включённым пока сайт не закроется или всегда, тем самым убрав заглушку нахуй, пока не сбросишь настройки), уже в появившемся облачке.

Пользователи ставили NoScript или Flashblock, и разрешали выполнение Flash только на доверенных сайтах.

Во флеше существует своя технология хранения данных на стороне клиента, аналогично обычным cookies, но вся подлость заключается в том, что эти данные не удаляются стандартными средствами браузеров и сохраняются даже в распиаренных нынче «приватных режимах серфинга». Поэтому любопытные сайты могут при помощи LSO следить за анонимусом. Чтоб флешевые куки не сохранялись, нужно в дебрях настроек флеша (здесь или запустив FlashPlayerApp.exe в папке C:\WINDOWS\system32 (C:\Windows\SysWOW64)) запретить сохранение данных на компе или сохранять по запросу на особо уебищных сайтах.

На Флэше за всю его историю было создано несколько винраров и просто меметичных творений. Многие из них уже канули в лету, но Анонимус не забывает.

В значительной мере на Флэше были основаны флагманы веб-два-ноля — Тюбик и Ластик.

Самым же крупным местом выкладывания роликов является эпичнейший и известный за бугром Newgrounds, представляющий собой нечто вроде DeviantArt для Flash-аниматоров и разработчиков. Он же является и главным источником большинства творений: именно там впервые появились и развились Charlie the Unicorn, Badger и There She Is!!, а Tankmen и Madness Combat так и вообще заслуженно считаются маскотами сайта. Но по ряду причин, в отличие от иностранных интернетов, в этой стране сайт популярности не заимел, несмотря на всю винрарность и немалую значимость.

Когда не замечать Flash было уже невозможно, компания Microsoft™®© обратила на него внимание и тут же нашла фатальный недостаток: Flash сделали не они. В результате на свет в срочном порядке появилась технология Сервелат SilverLight — тот же Flash, только в профиль и с дополнительными возможностями. Пользователи и веб-разработчики новую технологию встретили без энтузиазма, и SilverLight использовался чуть более чем на полутора сайтах, принадлежащих Microsoft[1] и Московскому метрополитену. В отличие от сабжа, серебряный свет построен на чём-то XML-образном, и поэтому не является закрытым форматом, что для Microsoft весьма удивительно. Однако существуют патентные угрозы: в любой момент Microsoft может потребовать откат с каждой копии альтернативной реализации Silverlight, аки Oracle у Google за Java. Подробности здесь.

Помимо прочего, Silverlight удобно впаян в .NET, что позволяет использовать его любому быдлокодеру, знакомому с платформой. При этом разработчику доступен не один язык программирования, а сразу вся пачка .NET, да-да, даже Бейсик… Если же быдлокодер умеет работать с WPF, то ему еще и не придется ничего учить. Впрочем, хорошо это только в теории: даже на ASP.NET-сайтах стремятся применять все-таки флеш.

Как альтернатива флешу в плане простых анимаций в веб-приложениях есть SVG, и несмотря на то, что он поддерживается практически во всех последних моделях браузеров и их плагинах, всем похуй. А разгадка одна — безблагодатность, IE видит SVG только через плагин (начиная с 9-й версии поддержка уже есть). Примеры SVG-анимации вместе с кодом можно увидеть здесь.

Стоит отметить, что применение Flash в качестве интернет-анимации преследовало 2 цели: собственно сама мультипликационная анимация и анимационные видеоигры. В первом случае, с распространением ютуба и видеохостингов для администраторов сайтов отпала необходимость в хранении мультипликационной анимации на серверах, даже если они были созданы на флеше. В втором случае, для интернет-игр стали применяться такие плагины как Unity (был заблокирован в хроме и лисе), WebGL.

Таким образом анимации как таковой на интернет-сайтах стало меньше, сайты стали легче загружаться и меньше раздражать глаза. Особо ностальгирующим по интернет-анимациям нужно поискать закрытые резервации.

На заре создания HTML5 предоставила возможность замены флеша в сфере встроенного веб-видео за счет сторонних кодеков. По крайней мере этому способствовала ярая ненависть Стива Джобса, вследствие чего флеш на маках вне закона. На HTML5 перешли Youtube, Vimeo, Facebook, Вконтакт.

Холивар только в том, какой выбрать видеокодек чтобы он устроил всех. Создатели Firefox, Chrome и Opera поддерживали кодек Theora — непопулярный, но зато не принадлежащий никому и распространяемый с открытыми исходниками. Nokia, Apple и Microsoft стояли на стороне кодека H.264 — повсеместно распространённого и поддерживаемого на аппаратном уровне, но защищённого патентами и в некоторых случаях требующего лицензионных выплат. Google встроил в браузер Chrome оба кодека, но для HTML5-версии Youtube выбрал VP8.

Ещё в 2009 году стало ясно, что компромисса между сторонниками Theora и сторонниками H.264 не будет. В отличие от Theora, с технической точки зрения VP8 ничем не хуже H.264. В отличие от H.264, кодек Google не вызывает неприятия у идеологов свободного софта. Удалось уговорить даже Microsoft. Осталась только одна проблема — мобильные устройства. Воспроизведение видео без аппаратного декодера слишком быстро расходует их аккумуляторы. Именно поэтому (хотя скорее всего из-за копирастии) Apple и Nokia в своё время предпочли H.264, который декодируется аппаратно. Существуют ли аппаратные декодеры VP8? Забабахают, если кодек будет распространён, так как не формат подбирают под аппаратные декодеры, а декодеры разрабатывают под наиболее часто используемые форматы. С основными производителями аппаратных декодеров вроде как даже уже удалось договориться [2]. Хотя есть вероятность сговора производителей декодеров с MPEG-LA, так как она, в случае успеха VP8, потеряет крупный рынок сбыта воздуха.

В 2010 году Гугл представил WebM — открытый формат мультимедиа, основанный на открытых видеокодеке VP8, аудиокодеке Vorbis и подмножестве медиаконтейнера Matroska. В январе 2011 года Гугл решил отказаться от поддержки H.264 в Хроме. WebM поддерживает FireFox, Opera и Chrome, а также при установке кодеков Internet Explorer 11.

На начало 2015-го года ситуация, в целом, патовая. Гугл планомерно выпиливает Флеш с Ютуба переводя всех на HTML5 (с обновленным WebM на базе VP9 и H264), но особой поддержки в сети вне Ютуба WebM не завоевал. H264 из Хрома тоже выпилить не решились. Вконтакте поддерживает HTML5 но не WebM. Мелкие и не очень самопальные видеохостинги плотно сидят на Флеш, хотя Айпады постепенно заставляют и их что-то выдумывать. 

По состоянию на 2017 год, в обозримом будущем готовится к внедрению видеокодек H.265, который предлагает более усовершенствованное  сжатие видео и видеопотока вплоть до расширения в 8K, что не оставляет выбора для интернет-сервисов видеотрансляций. Впрочем такие сервисы трансляций как Twitch уже используют видеокодек H.264, как и ВК, а вот формат flv не поддерживается. Нет в природе ни одного браузера не поддерживающего HTML5 и H.264, а значит Flash окончательно уступил первенство по применению на видеосайтах.

В конце 2015-го появилась новость, что флэш окончательно всё. Adobe переименовали среду разработки для флеш и вместо старого названия Adobe Flash (CC Professional) в дальнейшем будет именоваться Adobe Animate CC. Экспорт в флэш-формат swf остался для обратной совместимости и скорей всего будет выпилен в следующих версиях.

В конце 2016 года Google в своем браузере Chrome 55 окончательно пригрозила выкинуть флеш. До этого она сделала блокировку флеш-баннеров, чтобы они начинали проигрываться только по клику.

Итого: Adobe Flash живет и здравствует под названием Adobe Animate. Формат SWF почти умер и его поддержка в скором времени будет выпилена из всех браузеров вместе с Flash Player.


